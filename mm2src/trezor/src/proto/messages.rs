///*
/// Mapping between Trezor wire identifier (uint) and a protobuf message
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum MessageType {
    /// Management
    Initialize = 0,
    Ping = 1,
    Success = 2,
    Failure = 3,
    ChangePin = 4,
    WipeDevice = 5,
    GetEntropy = 9,
    Entropy = 10,
    LoadDevice = 13,
    ResetDevice = 14,
    Features = 17,
    PinMatrixRequest = 18,
    PinMatrixAck = 19,
    Cancel = 20,
    LockDevice = 24,
    ApplySettings = 25,
    ButtonRequest = 26,
    ButtonAck = 27,
    ApplyFlags = 28,
    BackupDevice = 34,
    EntropyRequest = 35,
    EntropyAck = 36,
    PassphraseRequest = 41,
    PassphraseAck = 42,
    RecoveryDevice = 45,
    WordRequest = 46,
    WordAck = 47,
    GetFeatures = 55,
    SdProtect = 79,
    ChangeWipeCode = 82,
    EndSession = 83,
    DoPreauthorized = 84,
    PreauthorizedRequest = 85,
    CancelAuthorization = 86,
    RebootToBootloader = 87,
    SetU2fCounter = 63,
    GetNextU2fCounter = 80,
    NextU2fCounter = 81,
    /// Deprecated messages, kept for protobuf compatibility.
    /// Both are marked wire_out so that we don't need to implement incoming handler for legacy
    DeprecatedPassphraseStateRequest = 77,
    DeprecatedPassphraseStateAck = 78,
    /// Bootloader
    FirmwareErase = 6,
    FirmwareUpload = 7,
    FirmwareRequest = 8,
    SelfTest = 32,
    /// Bitcoin
    GetPublicKey = 11,
    PublicKey = 12,
    SignTx = 15,
    TxRequest = 21,
    TxAck = 22,
    GetAddress = 29,
    Address = 30,
    SignMessage = 38,
    VerifyMessage = 39,
    MessageSignature = 40,
    GetOwnershipId = 43,
    OwnershipId = 44,
    GetOwnershipProof = 49,
    OwnershipProof = 50,
    AuthorizeCoinJoin = 51,
    /// Crypto
    CipherKeyValue = 23,
    CipheredKeyValue = 48,
    SignIdentity = 53,
    SignedIdentity = 54,
    GetEcdhSessionKey = 61,
    EcdhSessionKey = 62,
    CosiCommit = 71,
    CosiCommitment = 72,
    CosiSign = 73,
    CosiSignature = 74,
    /// Debug
    DebugLinkDecision = 100,
    DebugLinkGetState = 101,
    DebugLinkState = 102,
    DebugLinkStop = 103,
    DebugLinkLog = 104,
    DebugLinkMemoryRead = 110,
    DebugLinkMemory = 111,
    DebugLinkMemoryWrite = 112,
    DebugLinkFlashErase = 113,
    DebugLinkLayout = 9001,
    DebugLinkReseedRandom = 9002,
    DebugLinkRecordScreen = 9003,
    DebugLinkEraseSdCard = 9005,
    DebugLinkWatchLayout = 9006,
    /// Ethereum
    EthereumGetPublicKey = 450,
    EthereumPublicKey = 451,
    EthereumGetAddress = 56,
    EthereumAddress = 57,
    EthereumSignTx = 58,
    EthereumSignTxEip1559 = 452,
    EthereumTxRequest = 59,
    EthereumTxAck = 60,
    EthereumSignMessage = 64,
    EthereumVerifyMessage = 65,
    EthereumMessageSignature = 66,
    /// NEM
    NemGetAddress = 67,
    NemAddress = 68,
    NemSignTx = 69,
    NemSignedTx = 70,
    NemDecryptMessage = 75,
    NemDecryptedMessage = 76,
    /// Tezos
    TezosGetAddress = 150,
    TezosAddress = 151,
    TezosSignTx = 152,
    TezosSignedTx = 153,
    TezosGetPublicKey = 154,
    TezosPublicKey = 155,
    /// Stellar
    StellarSignTx = 202,
    StellarTxOpRequest = 203,
    StellarGetAddress = 207,
    StellarAddress = 208,
    StellarCreateAccountOp = 210,
    StellarPaymentOp = 211,
    StellarPathPaymentOp = 212,
    StellarManageOfferOp = 213,
    StellarCreatePassiveOfferOp = 214,
    StellarSetOptionsOp = 215,
    StellarChangeTrustOp = 216,
    StellarAllowTrustOp = 217,
    StellarAccountMergeOp = 218,
    /// omitted: StellarInflationOp is not a supported operation, would be 219
    StellarManageDataOp = 220,
    StellarBumpSequenceOp = 221,
    StellarSignedTx = 230,
    /// Cardano
    /// dropped Sign/VerifyMessage ids 300-302
    /// dropped TxRequest/TxAck ids 304 and 309 (shelley update)
    CardanoSignTx = 303,
    CardanoGetPublicKey = 305,
    CardanoPublicKey = 306,
    CardanoGetAddress = 307,
    CardanoAddress = 308,
    CardanoSignedTx = 310,
    CardanoSignedTxChunk = 311,
    CardanoSignedTxChunkAck = 312,
    CardanoTxItemAck = 313,
    CardanoTxAuxiliaryDataSupplement = 314,
    CardanoTxWitnessRequest = 315,
    CardanoTxWitnessResponse = 316,
    CardanoTxHostAck = 317,
    CardanoTxBodyHash = 318,
    CardanoSignTxFinished = 319,
    CardanoSignTxInit = 320,
    CardanoTxInput = 321,
    CardanoTxOutput = 322,
    CardanoAssetGroup = 323,
    CardanoToken = 324,
    CardanoTxCertificate = 325,
    CardanoTxWithdrawal = 326,
    CardanoTxAuxiliaryData = 327,
    CardanoPoolOwner = 328,
    CardanoPoolRelayParameters = 329,
    /// Ripple
    RippleGetAddress = 400,
    RippleAddress = 401,
    RippleSignTx = 402,
    RippleSignedTx = 403,
    /// Monero
    MoneroTransactionInitRequest = 501,
    MoneroTransactionInitAck = 502,
    MoneroTransactionSetInputRequest = 503,
    MoneroTransactionSetInputAck = 504,
    MoneroTransactionInputsPermutationRequest = 505,
    MoneroTransactionInputsPermutationAck = 506,
    MoneroTransactionInputViniRequest = 507,
    MoneroTransactionInputViniAck = 508,
    MoneroTransactionAllInputsSetRequest = 509,
    MoneroTransactionAllInputsSetAck = 510,
    MoneroTransactionSetOutputRequest = 511,
    MoneroTransactionSetOutputAck = 512,
    MoneroTransactionAllOutSetRequest = 513,
    MoneroTransactionAllOutSetAck = 514,
    MoneroTransactionSignInputRequest = 515,
    MoneroTransactionSignInputAck = 516,
    MoneroTransactionFinalRequest = 517,
    MoneroTransactionFinalAck = 518,
    MoneroKeyImageExportInitRequest = 530,
    MoneroKeyImageExportInitAck = 531,
    MoneroKeyImageSyncStepRequest = 532,
    MoneroKeyImageSyncStepAck = 533,
    MoneroKeyImageSyncFinalRequest = 534,
    MoneroKeyImageSyncFinalAck = 535,
    MoneroGetAddress = 540,
    MoneroAddress = 541,
    MoneroGetWatchKey = 542,
    MoneroWatchKey = 543,
    DebugMoneroDiagRequest = 546,
    DebugMoneroDiagAck = 547,
    MoneroGetTxKeyRequest = 550,
    MoneroGetTxKeyAck = 551,
    MoneroLiveRefreshStartRequest = 552,
    MoneroLiveRefreshStartAck = 553,
    MoneroLiveRefreshStepRequest = 554,
    MoneroLiveRefreshStepAck = 555,
    MoneroLiveRefreshFinalRequest = 556,
    MoneroLiveRefreshFinalAck = 557,
    /// EOS
    EosGetPublicKey = 600,
    EosPublicKey = 601,
    EosSignTx = 602,
    EosTxActionRequest = 603,
    EosTxActionAck = 604,
    EosSignedTx = 605,
    /// Binance
    BinanceGetAddress = 700,
    BinanceAddress = 701,
    BinanceGetPublicKey = 702,
    BinancePublicKey = 703,
    BinanceSignTx = 704,
    BinanceTxRequest = 705,
    BinanceTransferMsg = 706,
    BinanceOrderMsg = 707,
    BinanceCancelMsg = 708,
    BinanceSignedTx = 709,
    /// WebAuthn
    WebAuthnListResidentCredentials = 800,
    WebAuthnCredentials = 801,
    WebAuthnAddResidentCredential = 802,
    WebAuthnRemoveResidentCredential = 803,
}
